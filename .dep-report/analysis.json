{
  "importMap": {
    "arrayUtils.ts": [
      "./mathUtils",
      "./stringUtils",
      "lodash",
      "./templateUtils"
    ],
    "mathUtils.ts": [
      "uuid"
    ],
    "statsUtils.ts": [
      "./mathUtils",
      "./stringUtils",
      "./templateUtils",
      "./arrayUtils"
    ],
    "stringUtils.ts": [
      "./mathUtils",
      "./templateUtils"
    ],
    "templateUtils.ts": [
      "./mathUtils",
      "./stringUtils"
    ]
  },
  "graph": {
    "nodes": [
      "arrayUtils.ts",
      "mathUtils.ts",
      "statsUtils.ts",
      "stringUtils.ts",
      "templateUtils.ts"
    ],
    "edges": [
      {
        "from": "arrayUtils.ts",
        "to": "mathUtils.ts"
      },
      {
        "from": "arrayUtils.ts",
        "to": "stringUtils.ts"
      },
      {
        "from": "arrayUtils.ts",
        "to": "templateUtils.ts"
      },
      {
        "from": "statsUtils.ts",
        "to": "mathUtils.ts"
      },
      {
        "from": "statsUtils.ts",
        "to": "stringUtils.ts"
      },
      {
        "from": "statsUtils.ts",
        "to": "templateUtils.ts"
      },
      {
        "from": "statsUtils.ts",
        "to": "arrayUtils.ts"
      },
      {
        "from": "stringUtils.ts",
        "to": "mathUtils.ts"
      },
      {
        "from": "stringUtils.ts",
        "to": "templateUtils.ts"
      },
      {
        "from": "templateUtils.ts",
        "to": "mathUtils.ts"
      },
      {
        "from": "templateUtils.ts",
        "to": "stringUtils.ts"
      }
    ]
  },
  "cycles": [
    [
      "templateUtils.ts",
      "stringUtils.ts"
    ]
  ],
  "llm": {
    "version": "1.0",
    "risks": [
      "Cyclical dependencies detected, which can lead to build issues, runtime errors, and difficulties in testing and maintenance.",
      "High coupling between modules can make refactoring and feature addition more complex."
    ],
    "cycles_explained": [
      {
        "cycle": [
          "templateUtils.ts",
          "stringUtils.ts"
        ],
        "why": "templateUtils.ts imports stringUtils.ts, and stringUtils.ts imports templateUtils.ts, creating a circular dependency. This can cause initialization order problems and make reasoning about the code harder."
      }
    ],
    "tight_clusters": [
      {
        "modules": [
          "arrayUtils.ts",
          "mathUtils.ts",
          "statsUtils.ts",
          "stringUtils.ts",
          "templateUtils.ts"
        ],
        "reason": "These modules form a highly interconnected cluster, as many of them import each other. This suggests a lack of clear separation of concerns and potential for code duplication. Changes in one module may have cascading effects on others."
      }
    ],
    "refactor_recommendations": [
      "Break the cycle between templateUtils.ts and stringUtils.ts by introducing an intermediate module or interface to decouple them.",
      "Reduce coupling within the tight cluster of modules by identifying common functionalities and extracting them into separate, more focused modules.",
      "Consider using dependency injection to reduce hard dependencies between modules.",
      "Evaluate the use of interfaces to define contracts between modules, promoting loose coupling.",
      "Analyze external dependencies (lodash, uuid) and ensure they are used appropriately and not contributing to unnecessary coupling."
    ]
  }
}